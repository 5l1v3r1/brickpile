
@model BrickPile.UI.Web.ViewModels.IndexViewModel
@using System.Configuration
@using BrickPile.Domain
@using BrickPile.UI.Common

@{
    ViewBag.Title = "- Let's pile some bricks eh?";
}

@Html.Section(
@<script id="view-template-new-page-dialog" type="text/html">
<div id="models"> pageroute
    <h1><span>Create page</span></h1>
    <form method="post" action="@Url.Action("new", "pages", new { currentPage = @Model.CurrentModel })">
    @foreach (var type in Html.GetAvailablePageModels()) {
        var name = type.GetAttribute<ContentTypeAttribute>().Name ?? type.Name;
        <label>@name<input type="radio" name="SelectedPageModel" value="@type.AssemblyQualifiedName" /></label>
    }
    </form>
</div>
</script>, "templates")

@Html.Section(
@<script type="text/javascript">
    (function ($) {
        // Shorthand for the application namespace
        var app = brickpile.app;
        // Initialize the main view.
        app.pagesView = new PagesView({ el: $('#main') });
    })(jQuery);  
</script>, "scripts")

@if (Request.QueryString["deleted"] != null) {
    <a href="@Url.Action("index", "pages", new { currentPage = Model.CurrentModel })" class="btn back" title="Go Back">
        <span class="text">All Pages</span>
        <span class="left"></span>
    </a>        
}

@if (Model.ParentModel != null && Request.QueryString["deleted"] == null) {
    <a href="@Url.Action("index", "pages", new { currentPage = Model.ParentModel })" class="btn back">
        <span class="text">@Model.ParentModel.Metadata.Name</span>
        <span class="left"></span>
    </a>
}
<a href="#add" class="btn new" title="Create a New Page">
    <i class="icon-plus"></i>
</a>
<table id="tbl-pages" class="sortable">
    <caption>@Model.CurrentModel.Metadata.Name</caption>
    <thead>
        <tr>
            <th id="sort"><span>&nbsp;</span></th>
            <th><span>Page name</span></th>                
            <th id="slug"><span>Slug</span></th>
            <th id="publish"><span>Published</span></th>
            <th id="changed"><span>Changed</span></th>
            <th id="actions"><span>&nbsp;</span></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.ParentModel == null && Model.RootModel != null) {
            
            if(Request.QueryString["deleted"] != null) {
            
                if (Model.RootModel.Metadata.IsDeleted) {

                    <tr id="@Model.RootModel.Id.Replace('/', '_')" class="deleted">
                        <td><span><i class="icon-list"></i></span></td>
                        <td class="name"><span>@Model.RootModel.Metadata.Name</span></td>
                        <td class="slug"><span>@Model.RootModel.Metadata.Slug</span></td>
                        <td class="publish"><span>@Html.CheckBox(Model.RootModel.Id.Replace("/", "_"), Model.RootModel.Metadata.IsPublished, new { disabled = "disabled" })</span></td>
                        <td class="changed"><span><abbr class="timeago" title="@Model.RootModel.Metadata.Changed.Value.ToLocalTime().ToString("yyyy-MM-ddTHH:mm:ss")">@Html.Raw(Model.RootModel.Metadata.Changed.Value.ToString("f") + "</abbr> <strong>by</strong> " + Model.RootModel.Metadata.ChangedBy)</span></td>
                        <td class="actions">
                            <span>
                                <span class="btn-group">
                                    <a href="@Url.Action("restore", new { currentPage = Model.RootModel })" class="btn restore" title="Restore page">
                                        <i class="icon-restore"></i>
                                    </a>
                                    <a href="@Url.Action("delete", new { currentPage = Model.RootModel, permanent = "true" })" class="btn perma-delete" title="Delete page permanently">
                                        <i class="icon-trash"></i>
                                    </a>
                                </span>
                            </span>
                        </td>
                    </tr>
                }
                
                } else {
                    <tr id="@Model.RootModel.Id.Replace('/', '_')" class="ui-state-disabled home">
                        <td><span>&nbsp;</span></td>
                        <td class="name"><span>@Model.RootModel.Metadata.Name</span></td>
                        <td class="slug"><span>/@Model.RootModel.Metadata.Slug</span></td>
                        <td class="publish"><span>@Html.CheckBox(Model.RootModel.Id.Replace("/", "_"), Model.RootModel.Metadata.IsPublished, new { @class = "publish" })</span></td>
                        <td class="changed"><span><abbr class="timeago" title="@Model.RootModel.Metadata.Changed.Value.ToLocalTime().ToString("yyyy-MM-ddTHH:mm:ss")">@Html.Raw(Model.RootModel.Metadata.Changed.Value.ToString("f") + "</abbr> <strong>by</strong> " + Model.RootModel.Metadata.ChangedBy)</span></td>
                        <td class="actions">
                            <span>
                                <span class="btn-group">
                                    <a href="@Url.Action("edit", new { currentPage = Model.RootModel })" class="btn" title="Edit page">
                                        <i class="icon-pencil"></i>
                                    </a>
                                    <a href="@Url.Action("preview", new { currentPage = Model.RootModel })" class="btn" title="Preview page">
                                        <i class="icon-eye-open"></i>
                                    </a>
                                    <a href="@Url.Action("delete", new { currentPage = Model.RootModel })" class="btn delete" title="Delete page">
                                        <i class="icon-remove"></i>
                                    </a>
                                </span>
                            </span>
                        </td>
                    </tr>                    
                }
        }
        
        @if (Model.Children.Any()) {
            foreach (var item in Model.Children) {
                if (item.Metadata.IsDeleted) {
                    if (Request.QueryString["deleted"] != null) {
                        <tr id="@item.Id.Replace('/', '_')" class="deleted">
                            <td><span><i class="icon-list"></i></span></td>
                            <td class="name"><span>@item.Metadata.Name</span></td>
                            <td class="slug"><span>@item.Metadata.Slug</span></td>
                            <td class="publish"><span>@Html.CheckBox(item.Id.Replace("/", "_"), item.Metadata.IsPublished, new {disabled = "disabled"})</span></td>
                            <td class="changed"><span><abbr class="timeago" title="@item.Metadata.Changed.Value.ToLocalTime().ToString("yyyy-MM-ddTHH:mm:ss")">@Html.Raw(item.Metadata.Changed.Value.ToString("f") + "</abbr> <strong>by</strong> " + item.Metadata.ChangedBy)</span></td>
                            <td class="actions">
                                <span>
                                    <span class="btn-group">
                                        <a href="@Url.Action("restore", new { currentPage = item })" class="btn restore" title="Restore page">
                                            <i class="icon-restore"></i>
                                        </a>
                                        <a href="@Url.Action("delete", new { currentPage = item, permanent = "true" })" class="btn perma-delete" title="Delete page permanently">
                                            <i class="icon-trash"></i>
                                        </a>
                                    </span>
                                </span>
                            </td>
                        </tr>
                    }
                } else {
                    <tr id="@item.Id.Replace('/', '_')">
                        <td class="sort"><span><i class="icon-list" title="Sort (Drag up or down)"></i></span></td>
                        <td class="name"><span>@item.Metadata.Name</span></td>
                        <td class="slug"><span>@item.Metadata.Slug</span></td>
                        <td class="publish"><span>@Html.CheckBox(item.Id.Replace("/", "_"), item.Metadata.IsPublished, new { @class = "publish" })</span></td>
                        <td class="changed"><span><abbr class="timeago" title="@item.Metadata.Changed.Value.ToLocalTime().ToString("yyyy-MM-ddTHH:mm:ss")">@Html.Raw(item.Metadata.Changed.Value.ToString("f") + "</abbr> <strong>by</strong> " + item.Metadata.ChangedBy)</span></td>
                        <td class="actions">
                            <span>
                                <span class="btn-group">
                                    <a href="@Url.Action("edit", new { currentPage = item })" class="btn" title="Edit page">
                                        <i class="icon-pencil"></i>
                                    </a>
                                    @*<a href="@Url.RouteUrl("PageRoute", new RouteValueDictionary(new { currentPage = item }), Request.Url.Scheme, ConfigurationSettings.AppSettings["brickpile/hostname"])" class="btn" title="View page">
                                        <i class="icon-eye-open"></i>
                                    </a>*@
                                    <a href="@Url.Action("preview", new { currentPage = item })" class="btn" title="Preview page">
                                        <i class="icon-eye-open"></i>
                                    </a>
                                    <a href="@Url.Action("delete", new { currentPage = item })" class="btn delete" title="Delete page">
                                        <i class="icon-remove"></i>
                                    </a>
                                </span>
                                <a href="@Url.Action("index", new { currentPage = item })" class="btn level-down" data-notifications="8">
                                    <i class="icon-chevron-right"></i>
                                </a>      
                            </span>
                        </td>                            
                    </tr>
                }
            }
        }
    </tbody>
</table>

<div id="deleted-pages">
    @if (Request.QueryString["deleted"] == null) {
        <a href="@Url.Action("index", new { currentPage = Model.CurrentModel, deleted = "true" })">Show deleted pages</a>
    }
</div>

