
@model BrickPile.UI.Web.ViewModels.IDashboardViewModel
@using BrickPile.UI.Web.Mvc.Html
@using BrickPile.UI.Common
@{
    Layout = "~/Areas/BrickPile.UI/Views/Shared/_Layout.cshtml";

}

@section Navigation {
    <ul>
        <li>@Html.ActionLink("Dashboard", "index", "dashboard", null, new { @class = "dashboard" })</li>
        <li>@Html.ActionLink("Content", "index", "content", null, new { @class = "content selected" })</li>
    </ul>
}

<div id="growl">
    <strong>Publish succeeded</strong>
    <p>The page was successfully published</p>
</div>

<h1>Welcome @HttpContext.Current.User.Identity.Name! Let's pile some bricks eh?</h1>

@if (Model.CurrentModel != null) {
    <div id="content">
        <table>
            <caption>@if (Model.StructureInfo.ParentModel != null) { @Html.ActionLink(Model.StructureInfo.ParentModel) } @Model.CurrentModel.Metadata.Name <a href="@Url.Action("add", "content", new { model = Model.CurrentModel })" class="add">+</a></caption>
            <tr>
                <th><span>&nbsp;</span></th>
                <th><span>Page name</span></th>                
                <th><span>Slug</span></th>
                <th><span>Status</span></th>
                <th><span>Changed</span></th>
                <th><span>&nbsp;</span></th>
            </tr>
            @if (Model.StructureInfo.ParentModel == null) {
                <tr>
                    <td><span>&nbsp;</span></td>
                    <td><span>@Model.StructureInfo.RootModel.Metadata.Name</span></td>
                    <td><span>/@Model.StructureInfo.RootModel.Metadata.Slug</span></td>
                    <td><span>@Html.CheckBox(Model.StructureInfo.RootModel.Id.Replace("/", "_"), Model.StructureInfo.RootModel.Metadata.PublishedStatus, new { @class = "publish" })</span></td>
                    <td><span>@(Model.StructureInfo.RootModel.Metadata.Changed.HasValue ? @Model.StructureInfo.RootModel.Metadata.Changed.FormatDate() + " by " + Model.StructureInfo.RootModel.Metadata.ChangedBy : "")</span></td>
                    <td><span>@Html.ActionLink("Edit", "edit", new { model = Model.StructureInfo.RootModel }) @Html.ActionLink("Delete", "delete", new { model = Model.StructureInfo.RootModel })</span></td>
                </tr>
                                                                                                         foreach (var item in Model.StructureInfo.HierarchicalStructure) {
                    <tr>
                        <td><span><img src="/areas/brickpile.ui/images/sort.png" alt="Sort" /></span></td>
                        <td><span>@Html.ActionLink(item.Entity) @item.Entity.Metadata.SortOrder</span></td>
                        <td><span>/@item.Entity.Metadata.Slug</span></td>
                        <td><span>@Html.CheckBox(item.Entity.Id.Replace("/", "_"), item.Entity.Metadata.PublishedStatus, new { @class = "publish" })</span></td>
                        <td><span>@(item.Entity.Metadata.Changed.HasValue ? item.Entity.Metadata.Changed.FormatDate() + " by " + Model.StructureInfo.RootModel.Metadata.ChangedBy : "")</span></td>
                        <td><span>@Html.ActionLink("Edit", "edit", new { model = item.Entity }) @Html.ActionLink("Delete", "delete", new { model = item.Entity })</span></td>
                    </tr>
                                                                                                         }
            }
            @{
            var currentNode = Model.StructureInfo.HierarchicalStructure.SingleOrDefault(x => x.Entity.Id == Model.StructureInfo.CurrentModel.Id);
            if (currentNode != null && currentNode.ChildNodes != null) {
                foreach (var item in currentNode.ChildNodes) {
                        <tr>
                            <td><span><img src="/areas/brickpile.ui/images/sort.png" alt="Sort" /></span></td>
                            <td><span>@Html.ActionLink(item.Entity) @item.Entity.Metadata.SortOrder</span></td>
                            <td><span>/@item.Entity.Metadata.Slug</span></td>
                            <td><span>@Html.CheckBox(item.Entity.Id.Replace("/", "_"), item.Entity.Metadata.PublishedStatus, new { @class = "publish" })</span></td>
                            <td><span>@(item.Entity.Metadata.Changed.HasValue ? item.Entity.Metadata.Changed.FormatDate() + " by " + Model.StructureInfo.RootModel.Metadata.ChangedBy : " ")</span></td>
                            <td><span>@Html.ActionLink("Edit", "edit", new { model = item.Entity }) @Html.ActionLink("Delete", "delete", new { model = item.Entity })</span></td>
                        </tr>
                }
            }
            }
        </table>
    </div>

} else {
    <a href="@Url.Action("add", "content", new { model = Model.CurrentModel })" class="add">+</a>
}
@*
<h2>@Model.CurrentModel.Metadata.Name</h2>




Html.Raw(Html.PageList(Model.StructureInfo, page => Html.EditActionLink(page.Metadata.Name, "index", new { model = page })))

<h1>Create your first page</h1>
<div class="overlay">
    <aside>
        <h1>Create the home page</h1>
        @Html.ValidationSummary()
        <section>
            @using (Html.BeginForm("createdefault","content", null, FormMethod.Post, new { name = "editForm", style="border:0;" }))
            {

                @Html.LabelFor(model => model.AvailableModels)
                @Html.DropDownListFor(m => m.SelectedPageModel, new SelectList(Model.AvailableModels, "Value", "Text"))
                @Html.LabelFor(model => model.Name)
                @Html.EditorFor(model => model.Name)
                <menu>
                    <input type="submit" value="Yes, go ahead" />
                </menu>            
            }
        </section>
    </aside>
</div>

*@