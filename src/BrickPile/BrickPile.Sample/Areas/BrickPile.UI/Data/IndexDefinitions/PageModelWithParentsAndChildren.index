{
  "Name": "PageModelWithParentsAndChildren",
  "Map": "docs.pages\r\n\t.Select(page => new {Id = page.Id, Name = page.Metadata.Name})",
  "Maps": [
    "docs.pages\r\n\t.Select(page => new {Id = page.Id, Name = page.Metadata.Name})"
  ],
  "Reduce": null,
  "TransformResults": "results\r\n\t.Select(page => new {page = page, ancestors = this.Recurse(page, (Func<dynamic, dynamic>)(c => Database.Load(c.Parent.Id)))})\r\n\t.Select((Func<dynamic, dynamic>)(__h__TransparentIdentifier0 => new {Id = __h__TransparentIdentifier0.page.Id, Name = __h__TransparentIdentifier0.page.Metadata.Name, Ancestors = __h__TransparentIdentifier0.ancestors\r\n\t.Select((Func<dynamic, dynamic>)(ancestor => new {Id = ancestor.Id, Name = ancestor.Metadata.Name, Children = ancestor.Children}))}))",
  "IsMapReduce": false,
  "IsCompiled": false,
  "IsTemp": false,
  "Stores": {},
  "Indexes": {},
  "SortOptions": {},
  "Analyzers": {},
  "Fields": [],
  "Type": "Map"
}